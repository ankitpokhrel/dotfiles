// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-k": "menu::SelectPrev",
      "ctrl-j": "menu::SelectNext"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-p": "file_finder::Toggle", // Use cmd-p-p to toggle recently open file until #4663 is resolved.
      "cmd-shift-p": "command_palette::Toggle",
      "ctrl-`": "workspace::NewTerminal",
      "cmd-`": "terminal_panel::ToggleFocus",
      "cmd-j": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "cmd-shift-l": "editor::DeleteLine",
      "cmd-shift-k": "workspace::ToggleLeftDock",
      "cmd-ctrl-g": "editor::SelectAllMatches",
      "cmd-r n": "editor::Rename",
      "cmd-shift-up": "editor::MoveLineUp",
      "cmd-shift-down": "editor::MoveLineDown",
      "alt-shift-up": "editor::DuplicateLineUp",
      "alt-shift-down": "editor::DuplicateLineDown",
      "cmd-shift-i": "editor::AddSelectionBelow",
      "cmd-shift-j": "editor::AddSelectionAbove",
      "cmd-e": ["buffer_search::Deploy", { "focus": false }] // Highlight matching words under cursor
    }
  },
  {
    "context": "Editor && mode == full",
    "use_key_equivalents": true,
    "bindings": {
      "cmd-shift-o": "outline::Toggle",
      "cmd-l": "go_to_line::Toggle"
    }
  },
  {
    "context": "menu",
    "bindings": {
      "cmd-shift-k": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "vim_mode == visual && !menu",
    "bindings": {
      "shift-k": "editor::MoveLineUp",
      "shift-j": "editor::MoveLineDown"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "zz": "editor::ScrollCursorCenter",
      "ctrl-h": "project_panel::ToggleFocus"
    }
  }
]
